/*
 *   Copyright 2021 rocksdb developers
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            name = "Minecraft Forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.0"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "maven-publish"

ext {
    //minecraft things
    mcpmappingsVersion = "stable_39"
    minecraftforgeVersion = "14.23.5.2847"
    minecraftVersion = "1.12.2"

    //dependency things
    junitVersion = "4.12"
    rocksdbVersion = "6.13.3"

    //general things
    javaVersion = "1.8"
    forgerocksVersion = "$rocksdbVersion-$minecraftVersion"
}

version = "$forgerocksVersion"
group = "net.daporkchop"

compileJava {
    sourceCompatibility = targetCompatibility = "$javaVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
}

dependencies {
    shade "org.rocksdb:rocksdbjni:$rocksdbVersion"

    testCompile "junit:junit:$junitVersion"
}

minecraft {
    version = "$minecraftVersion-$minecraftforgeVersion"
    runDir = "run"
    mappings = "$mcpmappingsVersion"
    makeObfSourceJar = false

    def args = [
            "-Xmx2G",
            "-XX:+UseG1GC",
            "-ea",
            "-da:io.netty..."
    ]
    clientJvmArgs += args
    serverJvmArgs += args
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    classifier = "full"
    configurations = [project.configurations.shade]

    exclude 'module-info.class'
}
build.dependsOn shadowJar

reobf { //reobfuscate the shaded JAR
    shadowJar {}
}

publishing {
    repositories {
        if (project.hasProperty("opencollabMavenUsername") && project.hasProperty("opencollabMavenPassword")) {
            maven {
                credentials {
                    username = "$opencollabMavenUsername"
                    password = "$opencollabMavenPassword"
                }

                name = "NukkitX"
                url = version.endsWith("SNAPSHOT") ? "https://repo.opencollab.dev/snapshot/" : "https://repo.opencollab.dev/release/"
            }
        }
        if (project.hasProperty("daporkchopMavenUsername") && project.hasProperty("daporkchopMavenPassword")) {
            maven {
                credentials {
                    username = "$daporkchopMavenUsername"
                    password = "$daporkchopMavenPassword"
                }

                name = "DaPorkchop_"
                url = version.endsWith("SNAPSHOT") ? "https://maven.daporkchop.net/snapshot/" : "https://maven.daporkchop.net/release/"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "net.daporkchop"
            artifactId = "forgerocks"
            version = project.version

            from components.java
        }
    }
}
